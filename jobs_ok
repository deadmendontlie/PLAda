%By Kody Leptien, and Jarret Strickon
%jobs_ok(+Assigment, Employees)
jobs_ok(Assignment, Employees) :-
	nth0(0, Assignment, First),
	nth0(1, Assignment, Second),
	nth0(2, Assignment, Third),
	nth0(3, Assignment, Fourth),
	nth0(0, First, A),
	nth0(1, First, B),
	nth0(2, First, C),
	nth0(3, First, D),
	nth0(0, Second, E),
        nth0(1, Second, F),
        nth0(2, Second, G),
        nth0(3, Second, H),
	nth0(0, Third, I),
        nth0(1, Third, J),
        nth0(2, Third, K),
        nth0(3, Third, L),
	nth0(0, Fourth, M),
        nth0(1, Fourth, N),
        nth0(2, Fourth, O),
        nth0(3, Fourth, P),
	check_shiftone(A, Second, Third, Fourth),
	check_shiftone(B, Second, Third, Fourth),
	check_shiftone(C, Second, Third, Fourth),
	check_shiftone(D, Second, Third, Fourth),
	check_shifttwo(E, Third, Fourth),
        check_shifttwo(F, Third, Fourth),
        check_shifttwo(G, Third, Fourth),
        check_shifttwo(H, Third, Fourth),
	check_shiftthree(I, Fourth),
        check_shiftthree(J, Fourth),
        check_shiftthree(K, Fourth),
        check_shiftthree(L, Fourth),
	samescheduledups(A, B, C, D),
	samescheduledups(E, F, G, H),
	samescheduledups(I, J, K, L),
	samescheduledups(M, N, O, P),
	find_phones(A, Employees),
	find_phones(B, Employees),
	find_computer(C, Employees),
	find_network(D, Employees),
	find_phones(E, Employees),
	find_phones(F, Employees),
	find_computer(G, Employees),
	find_network(H, Employees),
	find_phones(I, Employees),
	find_phones(J, Employees),
	find_computer(K, Employees),
	find_network(L, Employees),
	find_phones(M, Employees),
	find_phones(N, Employees),
	find_computer(O, Employees),
	find_network(P, Employees).
	
%shift_dups(+Person, +L) Figures out if a list is good
shift_dups(Person, Shift) :-
	\+ member(Person, Shift).

%check_phones(+L) checks to see if the person has the phones skill
check_phones([H, P | T]) :-
	P = 1.

%check_computers(+L) checks to see if the person has the phones skill
check_computer([H, P, C | T]) :-
        C = 1.

%check_network(+L) checks to see if the person has the phones skill
check_network([H, P, C, N]) :-
        N = 1.

%check_shiftone(+Person, +ShiftTwo, +ShiftThree, +ShiftFour)
check_shiftone(Person, ShiftTwo, ShiftThree, ShiftFour) :-
	shift_dups(Person, ShiftTwo),
        shift_dups(Person, ShiftThree),
        shift_dups(Person, ShiftFour).

check_shifttwo(Person, ShiftThree, ShiftFour) :-
        shift_dups(Person, ShiftThree),
        shift_dups(Person, ShiftFour).

check_shiftthree(Person, ShiftFour) :-
        shift_dups(Person, ShiftFour).

samescheduledups(One, Two, Three, Four) :-
	One \= Two,
	One \= Three,
	One \= Four,
	Two \= Three,
	Two \= Four,
	Three\= Four.

find_phones(Person, [P | T]) :-
	member(Person, P),
	check_phones(P).

find_phones(Person, [_ | T]) :-
	find_phones(Person, T).

find_computer(Person, [P | T]) :-
        member(Person, P),
        check_computer(P).

find_computer(Person, [_ | T]) :-
        find_computer(Person, T).

find_network(Person, [P | T]) :-
        member(Person, P),
        check_network(P).

find_network(Person, [_ | T]) :-
        find_network(Person, T).
